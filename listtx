#!/usr/bin/perl

# Copyright (c) 2013 Todd T. Fries <todd@fries.net>
#
# Permission to use, copy, modify, and distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.

use strict;
use warnings;

use OpenBSD::Getopt;

use POSIX qw(strftime);

our $opt_p; # port
our $opt_a; # account
our $opt_w; # wallet name (appended to Assets:Wallets:)
our $opt_m; # matching transaction received account name
our $opt_s; # matching transaction spent    account name

# XXX with no $opt_a, list all accounts and transactions??

getopts('a:m:p:s:w:');

sub usage
{
	printf STDERR "must define account (-a <acct>) and port (-p <port>)\n";
	exit(1);
}

if (!defined($opt_a) && !defined($opt_p)) {
	usage();
}

# get accounts and addresses
my $cmd = "bitcoind -rpcport=${opt_p} listaccounts";
my $line;
my @accts;
open(BTC,"${cmd} 2>&1 |");
while(<BTC>) {
	chomp($line = $_);
	if ($line =~ /^\s+"(.*)" : [0-9]+\.[0-9]{8,8}/) {
		push @accts, $1;
	}
}
close(BTC);

my %acctaddrs;
my %addracct;
foreach my $acct (@accts) {
	printf "; Assets:Wallets:%s\n", $acct if ($acct eq $opt_a);
	$cmd = "bitcoind -rpcport=${opt_p} getaddressesbyaccount \"${acct}\"";
	open(BTC,"${cmd} 2>&1 |");
	while(<BTC>) {
		chomp($line = $_);
		# yes we could be more clever with this regex, but why?
		if ($line =~ /^\s+"(1[0-9A-Za-z]+)"/) {
			my $address = $1;
			#printf STDERR "\"%s\" : \"%s\"\n", $address, $acct;
			printf ";     %s\n", $address if ($acct eq $opt_a);
			$addracct{$address} = $acct;
			push @{$acctaddrs{$acct}}, $address;
		}
	}
	close(BTC);
}
print "\n";

my $tx = 0;
$cmd = "bitcoind -rpcport=${opt_p} listtransactions ${opt_a}";
#printf STDERR "cmd: %s\n",$cmd;
open(BTC,"${cmd} 2>&1 |");

my $addr;
my $amount;
my $time;
my $txid;
my $otheraccount;
my $thisaccount;
my $fee;
my $comment;
while(<BTC>) {
	chomp($line = $_);

	next if ($line =~ /^[\[\]]/);
	if ($line =~ /^\s+}/) {
		printf "; %d. txid %s\n", $tx, $txid if defined($txid);
		if (defined($addr)) {
			my $a = "";
			if (defined($addracct{$addr})) {
				$a = " (".$addracct{$addr}.")";
			}
			printf "; %d. addr %s%s\n", $tx, $addr, $a;
		}
		if (defined($comment) && length($comment) > 0) {
			printf "; %s\n", $comment
		}
		printf "%s coin\n", $time;
		printf "    Assets:Wallets:%s\tBTC\t%0.8f\n",
		    $thisaccount, $amount;
		if (defined($fee)) {
			printf "    Expenses:TransactionFee\tBTC\t%0.8f\n",
			    $fee;
		}
		printf "    %s\n\n",$otheraccount;
		next;
	}

	if ($line =~ /{/) {
		$tx++;
		$addr = undef;
		$amount = undef;
		$time = undef;
		$txid = undef;
		$otheraccount = undef;
		$thisaccount = $opt_a;
		$fee = undef;
		$comment = undef;
		next;
	}

	if ($line =~ /^\s+\"([a-z]+)\"\s+:\s+(.*)$/) {
		my ($var,$val) = ($1,$2);
		if ($var =~ /(blockhash|blockindex|blocktime|confirmations|timereceived)/) {
			next;
		}
		#printf STDERR "%s=%s\n",$var,$val;
		# remove comma
		if ($val =~ /^(.*),$/) {
			$val = $1;
		}
		# remove quotes
		if ($val =~ /^\"(.*)\"$/) {
			$val = $1;
		}
		if ($var eq "address") {
			$addr = $val;
			next;
		}
		if ($var eq "otheraccount") {
			$otheraccount="Assets:Wallets:$val";
			#printf STDERR "otheraccount=%s\n",$otheraccount;
			next;
		}
		if ($var eq "account") {
			next;
		}
		if ($var eq "category") {
			if ($val eq "receive") {
				$otheraccount=$opt_m;
				if (defined($addr)) {
					if (defined($addracct{$addr})) {
						$thisaccount=$addracct{$addr};
						next;
					}
				}
				next;
			}
			if ($val eq "send") {
				if (defined($addr)) {
					if (defined($addracct{$addr})) {
						$otheraccount="Assets:Wallets:".
						    $addracct{$addr};
						next;
					}
				}
				$otheraccount=$opt_s;
				next;
			}
			if ($val eq "move") {
				next;
			}
			printf STDERR "%s = '%s' not handled\n",$var,$val;
			next;
		}
		if ($var =~ /time/) {
			$time = strftime("%Y/%m/%d %H:%M:%S", localtime($val));
			next;
		}
		if ($var eq "amount") {
			$amount = $val;
			next;
		}
		if ($var eq "txid") {
			$txid = $val;
			next;
		}
		if ($var eq "fee") {
			$fee = $val;
			next;
		}
		if ($var eq "comment") {
			$comment = $val;
			next;
		}
		printf "; %02d: %s = '%s' not handled\n",$tx,$var,$val;
		next;
	}
	printf STDERR "Unparsed line: %s\n", $line;
}
close(BTC);
